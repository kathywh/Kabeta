.include ../../../tools/kabeta.uasm

||====================================================================================||
||                              Supervisor Data Segment                               ||
||====================================================================================||
LOCATE(0x0000)

s_data:
	STORAGE(1)

||====================================================================================||
||                                 User Data Segment                                  ||
||====================================================================================||
LOCATE(0x0800)

| stack
stack:
	STORAGE(256)


||====================================================================================||
||                                 User Data Segment                                  ||
||                                 out of address range                               ||
||====================================================================================||
LOCATE(0x5000)		| @addr, addr<0x8000

inva_data:
	STORAGE(1)

||====================================================================================||
||                                 Exception  Vectors                                 ||
||====================================================================================||
EXCVT()

rst_vec:
	BR(start)
svc_vec:
	BR(.)
ill_vec:
	BR(.)
inv_op_vec:
	BR(.)
inv_da_vec:
	BR(inv_da_esr)
inv_ia_vec:
	BR(inv_ia_esr)
irq_vec:
	BR(.)
urq_vec:
	BR(.)

||====================================================================================||
||                              Supervisor Code Segment                               ||
||====================================================================================||
LOCATE(0x0020)

	| Invalid Data Address Handler
	|   Return to next instruction for test
inv_da_esr:
inv_ia_esr:
	PUSH(XP)
	PUSH(R0)
	PUSH(R1)
	| Process illegal in fault here,
	| assuming R0 & R1 will be used.
	POP(R1)
	POP(R0)
	POP(XP)
	JMP(XP)	

	| Reset vector jump here
start:

	| Set SP
	MOVC(stack, SP)

	| Switch to User Mode
	MOVC(user_start%PC_MASK, R0)
	JMP(R0)

||====================================================================================||
||                                  User Code Segment                                 ||
||====================================================================================||
LOCATE(0x0800)
user_start:

	MOVC(0x59C1, R0)
	MOVC(0x59C2, R1)
	MOVC(0x59C3, R2)

	| Invalid data address
	LD(inva_data, R0)
	ST(R1, inva_data)
	LD(s_data, R0)			| SSP
	ST(R0, s_data)			| SSP

	| Invalid instruction address
	LDR(inva_instr, R0)		| data in i-mem
	LDR(rst_vec, R0)		| SSP

end:
	BR(.)

|--------------------------------------
| code segment out of address range
|--------------------------------------
LOCATE(0x6000)		| @addr, addr<0x8000

inva_instr:
	STORAGE(1)