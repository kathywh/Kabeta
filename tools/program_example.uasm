.include ../../tools/kabeta.uasm

||============================================================================||
||                            Constant Definitions                            ||
||============================================================================||


||============================================================================||
||                             Macro  Definitions                             ||
||============================================================================||

| Wait for I/O completion
.macro IOWAIT() {
	NOP()  NOP()  NOP()  NOP()
	NOP()  NOP()  NOP()  NOP()
	NOP()  NOP()  NOP()  NOP()}

||============================================================================||
||                          Supervisor Data Segment                           ||
||============================================================================||
LOCATE(0x0000)


||============================================================================||
||                             User Data Segment                              ||
||============================================================================||
LOCATE(0x0800)

| Stack
stack:
	STORAGE(32)

| 32-bit variable
var1:
	STORAGE(1)
var2:
	STORAGE(1)

| Word array
array:
	STORAGE(16)
array2:
	STORAGE(8)

||============================================================================||
||                                I/O  Segment                                ||
||============================================================================||
LOCATE(0x000)
EIC_IE:	
	STORAGE(1)		| 0x000, WO
EIC_IN:
	STORAGE(1)		| 0x004, RO

||============================================================================||
||                             Exception  Vectors                             ||
||============================================================================||
EXCVT()

rst_vec:
	BR(start)
svc_vec:
	BR(svc_esr)
ill_vec:
	BR(.)
inv_op_vec:
	BR(.)
inv_da_vec:
	BR(.)
inv_ia_vec:
	BR(.)
irq_vec:
	BR(irq_esr)
urq_vec:
	BR(.)

||============================================================================||
||                          Supervisor Code Segment                           ||
||============================================================================||
LOCATE(0x0080)

	|----------------------------------------------------------------------|
	| IRQ Handler                                                          |
	|----------------------------------------------------------------------|

irq_esr:
	| Adjust XP
	SUBC(XP, 4, XP)

	| Save registers
	PUSH(R0)
	PUSH(R1)
	PUSH(R2)

	| Get interrupt number
	IOR(EIC_IN, R1)				| R1: interrupt number

	| Process interrupt
	| ...

irq_end:
	| Restore registers
	POP(R2)
	POP(R1)
	POP(R0)

	| Return
	JMP(XP)

	|----------------------------------------------------------------------|
	| SVC Handler                                                          |
	|----------------------------------------------------------------------|	

svc_esr:
	| Save registers
	PUSH(R1)
	PUSH(R2)
	PUSH(R3)

	| Process svc
	| ...

svc_end:
	| Restore registers
	POP(R3)
	POP(R2)
	POP(R1)

	| Return
	JMP(XP)

	|----------------------------------------------------------------------|
	| System initialization                                                |
	|----------------------------------------------------------------------|

start:

	| Set SP
	MOVC(stack, SP)

	| Init data segment
	| ...

	| Set up I/O components
	| ...

	| Enable interrupt
	MOVC(1, R0)
	IOWAIT()
	IOW(R0, EIC_IE)

	| Switch to User Mode
	MOVC(user_start%PC_MASK, R0)
	JMP(R0)

||============================================================================||
||                        Supervisor Literal  Segment                         ||
||============================================================================||
LITERAL()


||============================================================================||
||                              User Code Segment                             ||
||============================================================================||
LOCATE(0x0800)



	|----------------------------------------------------------------------|
	| Main loop                                                            |
	|----------------------------------------------------------------------|
	
user_start:
	| Main loop init
	| ...

main_loop:	
	| Main loop body
	| ...

	BR(main_loop)

||============================================================================||
||                           User Literal  Segment                            ||
||============================================================================||
LITERAL()

    |----------------------------------------------------------------------|
    | Program Signature                                                    |
    |----------------------------------------------------------------------|
LOCATE(0x0FFC)
__signature:
	LONG(0xCA3EBE3A)